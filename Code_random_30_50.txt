//$('#news').css('display', 'none');
$('#body').css('background', 'url(https://luckygames.io/tml/luckygames/images/space.jpg) repeat-y 50% 0');
$('#content').css('background', 'url(https://luckygames.io/tml/luckygames/images/space.jpg) repeat-y 50% 0');
$('#gameContainer').html('<center><font style="color: #2eab5b; font-size: 16px;"><b style="font-size: 30px;">Dice BOT Luckygames 33 to 54</b><br> Strategy by <a href="https://www.facebook.com/mhqbz" target="_blank">Mai Hoang Quoc Bao</a><br>&copy; 2018 powered by <a href="https://www.facebook.com/mhqbz" target="_blank">Mai Hoang Quoc Bao</a> | <a href="https://luckygames.io/user/mhqbbentre/" target="_blank">Donate to author</a></font>');
$('#gameContainer').css('height', '100px');
//$('#listContainer').css('display', 'none');
//$('#frontText').css('display', 'none');
$('.betContainer').html('<center><input id="basebet" type="number" value="0.00003003" style="width: 30%; text-align: center;" placeholder="BaseBet"> <input id="target" type="number" value="1000.10000000" style="width: 30%; text-align: center;" placeholder="Target"> <input id="stoplost" type="number" value="0.00000000" style="width: 30%; text-align: center;" placeholder="StopLost"><br><br> <button id="startbutton" onclick="startbot();">Start BOT</button> <button id="stopbutton" onclick="stopbot();">Stop BOT</button> <button id="resetbutton" onclick="resetbot();">Reset BOT</button> <button id="exitbutton" onclick="exit();">Exit BOT</button> <p style="color: #2eab5b; font-size: 16px;">PlayTime = <span id="playday">0</span> - <span id="playhour">0</span>:<span id="playminute">0</span>:<span id="playsecond">0</span> - SpeedBet = <span id="speedbet">0</span> bet/s<br> TotalProfit = <span id="totalprofit">0</span><br> LargestBet = <span id="largestbet">0</span> - LargestProfit = <span id="largestprofit">0</span><br> LargestWin = <span id="largestwin">0</span> - LargestLose = <span id="largestlose">0</span><br> Bet = <span id="bet">0</span> - Win = <span id="win">0</span> - Lose = <span id="lose">0</span><br> WinStreak = <span id="winstreak">0</span> - MaxWinStreak = <span id="maxwinstreak">0</span><br>  LoseStreak = <span id="losestreak">0</span> - MaxLoseStreak = <span id="maxlosestreak">0</span></p></center>');
randomizeSeed();
$('#stopbutton').prop('disabled', true);
alert('BOT has applied\nGoodluck to you!');
var _startbalance = parseFloat($('#balance').val());
var _onbalance = 0;
var _profit = 0;
var _totalprofit = 0;
var _target = parseFloat($('#target').val());
var _stoplost = parseFloat($('#stoplost').val());
var _prediction = Math.floor((Math.random() * (50 - 30 + 1)) + 30);
var _prediction2 = _prediction;
var _previouschance = 0;
var _basebet = parseFloat($('#basebet').val());
var _betAmount = _basebet;
var _previousbet = 0;
var _largestbet = 0;
var _largestprofit = 0;
var _largwin = 0;
var _largestwin = 0;
var _larglose = 0;
var _largestlose = 0;
var _direction = 'under';
var _betSide = prompt('Bet side (hi/low/random)', 'random');
var _bet = 0;
var _win = 0;
var _winstreak = 0;
var _maxwinstreak = 0;
var _lose = 0;
var _losestreak = 0;
var _maxlosestreak = 0;
var _starttime = 0;
var _ontime = 0;
var _playtime = 0;
var _playday = 0;
var _playhour = 0;
var _playminute = 0;
var _playsecond = 0;
var _speedbet = 0;
var _stoped = true;
var _coin = $('#coin').val();
var _runseed = 0;
var _changeseed = Math.floor(1);
var setChance = function(_chance, _side) {
                                var prediction_num = 50;
                                var __side = _side;
                                if (__side.toLowerCase() == "random") {
                                    var _array = new Uint32Array(5);
                                    window.crypto.getRandomValues(_array);
                                    var x = _array[3];
                                    if (x % 2 == 0) {
                                        __side = "hi";
                                        _direction = 'under'
                                    } else {
                                        __side = "low";
                                        _direction = 'over'
                                    }
                                }
                                if (_chance < 50) {
                                    if (__side.toLowerCase() == "low") {
                                    	_direction = 'under';
                                    	prediction_num = _chance;
                                    }
                                    else {
                                    	_direction = 'over';
                                    	prediction_num = 100 - _chance;
                                    }

                                } else {
                                    if (__side.toLowerCase() == "low"){
                                    	_direction = 'under';
                                    	prediction_num = _chance;
                                    }
                                    else {
                                    	_direction = 'over';
                                    	prediction_num = 100 - _chance;
                                    }
                                }
                                console.log("current chance: "+ _chance);
                                _prediction2 = prediction_num;
                                console.log("prediction_num: " + _prediction2);
                                console.log("_direction: " + _direction);
                            }
function startbot(){
	_stoped = false;
	_starttime = new Date();
    if ($('#basebet').val() == 0) {
		_basebet = _startbalance / 1000000;
	} else {
		_basebet = parseFloat($('#basebet').val());
	}
    _target = parseFloat($('#target').val());
    _betAmount = _basebet;
	_stoplost = parseFloat($('#stoplost').val());
	$('#startbutton').prop('disabled', true);
	$('#stopbutton').prop('disabled', false);
	$('#resetbutton').prop('disabled', true);
	$('#basebet').val(_basebet.toFixed(8));
	$('#basebet').prop('disabled', true);
	$('#target').val(_target.toFixed(8));
	$('#target').prop('disabled', true);
	$('#stoplost').val(_stoplost.toFixed(8));
	$('#stoplost').prop('disabled', true);
    dobet();
}
function stopbot(){
	_stoped = true;
	$('#startbutton').prop('disabled', false);
	$('#stopbutton').prop('disabled', true);
	$('#resetbutton').prop('disabled', false);
	$('#basebet').prop('disabled', false);
	$('#target').prop('disabled', false);
	$('#stoplost').prop('disabled', false);
}
function resetbot() {
	randomizeSeed();
	_startbalance = parseFloat($('#balance').val());
	_onbalance = 0;
	_profit = 0;
	_totalprofit = 0;
	_target = parseFloat($('#target').val());
	_stoplost = parseFloat($('#stoplost').val());
	_prediction = Math.floor((Math.random() * (50 - 30 + 1)) + 30);
	_previouschance = 0;
	_basebet = parseFloat($('#basebet').val());
	_betAmount = _basebet;
	_previousbet = 0;
	_largestbet = 0;
	_largestprofit = 0;
	_largestwin = 0;
	_largestlose = 0;
	_direction = 'under';
	_bet = 0;
	_win = 0;
	_largwin = 0;
	_winstreak = 0;
	_maxwinstreak = 0;
	_lose = 0;
	_larglose = 0;
	_losestreak = 0;
	_maxlosestreak = 0;
	_ontime = 0;
	_playtime = 0;
	_playday = 0;
	_playhour = 0;
	_playminute = 0;
	_playsecond = 0;
	_speedbet = 0;
	_stoped = true;
	_runseed = 0;
	$('#speedbet').html(_speedbet);
	$('#playday').html(_playday);
	$('#playhour').html(_playhour);
	$('#playminute').html(_playminute);
	$('#playsecond').html(_playsecond);
	$('#totalprofit').html(_totalprofit);
	$('#largestbet').html(_largestbet);
	$('#largestprofit').html(_largestprofit);
	$('#bet').html(_bet);
	$('#win').html(_win);
	$('#largestwin').html(_largestwin);
	$('#lose').html(_lose);
	$('#largestlose').html(_largestlose);
	$('#winstreak').html(_winstreak);
	$('#maxwinstreak').html(_maxwinstreak);
	$('#losestreak').html(_losestreak);
	$('#maxlosestreak').html(_maxlosestreak);
}
function exit() {
	var _dn = confirm('Please donate to author!');
	if (_dn == true) {
		window.open('https://luckygames.io/user/mhqbbentre/', '_blank');
		location.reload();
	} else {
		location.reload();
	}
}
function dobet() {				
	if (_stoped === false) {
		setChance(_prediction,  _betSide);
		jQuery.ajax({
			url: '/ajx/',
			type: 'POST',
			dataType: 'html',
			timeout: 2e4,
			data: {
				game: 'dice',
				coin: _coin,
				betAmount: _betAmount,
				prediction: _prediction2,
				direction: _direction,
				clientSeed: $("#clientSeed").val(),
				serverSeedHash: $("#serverSeedHash").html(),
				action: "playBet",
				hash: user.hash
			},
			success: function(data) {
				var _a = JSON.parse(data);
				var _result = _a.result;
				if (_result === true) {
					var _gameresult = _a.gameResult;
					var _resultnumber = _a.resultNumber;
					$('#serverSeedHash').html(_a.serverSeedHash);
					$('#prevServerSeed').html(_a.prevServerSeed);
					$('#prevServerSeedHash').html(_a.prevServerSeedHash);
					$('#prevClientSeed').html(_a.prevClientSeed);
					$('#balance').animateBalance(_a.balance);
					_onbalance = _a.balance;
					_profit = _a.profit;
					_totalprofit = _onbalance - _startbalance;
					_previouschance = _prediction;
					_previousbet = _betAmount;
					_ontime = new Date().getTime();
                    _playtime = _ontime - _starttime;
					_playday = Math.floor(_playtime / (1000 * 60 * 60 * 24));
					_playhour = Math.floor((_playtime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
					_playminute = Math.floor((_playtime % (1000 * 60 * 60)) / (1000 * 60));
					_playsecond = Math.floor((_playtime % (1000 * 60)) / 1000);
					_speedbet = parseFloat((_bet / _playtime) * 1000);
					_bet++;
					_runseed++;
					if (_runseed >= _changeseed) {
						_runseed = 0;
						randomizeSeed();
					}
					console.log('Betting ' + _previousbet.toFixed(8) + ' at ' + _previouschance + ' ' + _direction + ', roll ' + _resultnumber + ' : ' + _gameresult);
					if (_gameresult == 'win') {
						_win++;
						_winstreak++;
						_losestreak = 0;
						_largwin = _betAmount;
					} else {
						_lose++;
						_winstreak = 0;
						_losestreak++;
						_larglose = _betAmount;
					}
					if (_target > 0 && _totalprofit > _target) {
						stopbot();
						alert('Target done!');
					} else {
						if (_stoplost > 0 && _onbalance <= _stoplost) {
							stopbot();
							alert('Stop lost!');Math.floor((Math.random() * (50 - 30 + 1)) + 30)
						} else {
							if (_gameresult == 'win') {
								_rd = Math.floor((Math.random() * (3 - 1 + 1)) + 1);
								if (_rd == 1) {
									_prediction = Math.floor((Math.random() * (35 - 30 + 1)) + 30);
								} else if (_rd == 2) {
									_prediction = Math.floor((Math.random() * (41 - 38 + 1)) + 38);
								} else {
									_prediction = Math.floor((Math.random() * (50 - 42 + 1)) + 42);
								}
								_betAmount = _basebet;
							} else {
								_prediction = _previouschance;
								if (_previouschance == 30) {
									_betAmount = _previousbet * 1.6;
								} else if (_previouschance == 31) {
									_betAmount = _previousbet * 1.6;
								} else if (_previouschance == 32) {
									_betAmount = _previousbet * 1.6;
								} else if (_previouschance == 33) {
									_betAmount = _previousbet * 1.7;
								} else if (_previouschance == 34) {
									_betAmount = _previousbet * 1.7;
								} else if (_previouschance == 35) {
									_betAmount = _previousbet * 1.7;
								} else if (_previouschance == 36) {
									_betAmount = _previousbet * 1.8;
								} else if (_previouschance == 37) {
									_betAmount = _previousbet * 1.8;
								} else if (_previouschance == 38) {
									_betAmount = _previousbet * 1.8;
								} else if (_previouschance == 39) {
									_betAmount = _previousbet * 1.9;
								} else if (_previouschance == 40) {
									_betAmount = _previousbet * 1.9;
								} else if (_previouschance == 41) {
									_betAmount = _previousbet * 1.9;
								} else if (_previouschance == 42) {
									_betAmount = _previousbet * 2;
								} else if (_previouschance == 43) {
									_betAmount = _previousbet * 2;
								} else if (_previouschance == 44) {
									_betAmount = _previousbet * 2;
								} else if (_previouschance == 45) {
									_betAmount = _previousbet * 2.1;
								} else if (_previouschance == 46) {
									_betAmount = _previousbet * 2.1;
								} else if (_previouschance == 47) {
									_betAmount = _previousbet * 2.1;
								} else if (_previouschance == 48) {
									_betAmount = _previousbet * 2.2;
								} else if (_previouschance == 49) {
									_betAmount = _previousbet * 2.2;
								} else if (_previouschance == 50) {
									_betAmount = _previousbet * 2.2;
								}
							}
						}
					}
					if (_betAmount > _largestbet) {
						_largestbet = _betAmount;
					}
					if (_profit > _largestprofit) {
						_largestprofit = _profit;
					}
					if (_largwin > _largestwin) {
						_largestwin = _largwin;
					}
					if (_larglose > _largestlose) {
						_largestlose = _larglose;
					}
					if (_winstreak > _maxwinstreak) {
						_maxwinstreak = _winstreak;
					}
					if (_losestreak > _maxlosestreak) {
						_maxlosestreak = _losestreak;
					}
					$('#speedbet').html(_speedbet.toFixed(2));
					$('#playday').html(_playday);
					$('#playhour').html(_playhour);
					$('#playminute').html(_playminute);
					$('#playsecond').html(_playsecond);
					$('#totalprofit').html(_totalprofit.toFixed(8));
					$('#largestbet').html(_largestbet.toFixed(8));
					$('#largestprofit').html(_largestprofit);
					$('#bet').html(_bet);
					$('#win').html(_win);
					$('#largestwin').html(_largestwin.toFixed(8));
					$('#lose').html(_lose);
					$('#largestlose').html(_largestlose.toFixed(8));
					$('#winstreak').html(_winstreak);
					$('#maxwinstreak').html(_maxwinstreak);
					$('#losestreak').html(_losestreak);
					$('#maxlosestreak').html(_maxlosestreak);
					dobet();
				} else {
					setTimeout(dobet(),1000);
				}
			},
			error: function(xhr, ajaxOptions, thrownError) {
				alert('Fail, BOT will be stop!');
			},
			timeout: function(xhr, ajaxOptions, thrownError) {
				dobet()
			},
			abort: function(xhr, ajaxOptions, thrownError) {
				dobet();
			}
		});
	} else {
		
	}
}
